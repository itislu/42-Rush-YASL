#!./yasl_linux_x64

{ print "\n" print } print_endl

{ = print_endl } print_lossless

{
	# %? #(
		print_lossless
		# !^
	)
	"\n" print
} print_stack_lossless

{ = ! } move

{
	"Error: Invalid input!" print_endl
	1 exit
} error

{
	{
		= = 4 /
		4 * !=
	} is_not_perfect_square

	{
		= 9:= > ? (
			// not yet found
			7:(1 +):7
			8:(2 +):8
			9:(8:= +):9
			// 8:=:9 +
			find_square_root
		) : ( = 9:= == ? (
			// found square
			7:move
		) : (
			// not a square
			error //? 3 excess chars are still allowed atm
		) )
	} find_square_root

	// 7: root
	// 8: diff
	// 9: square
	{
		1:7
		1:8
		1:9
		find_square_root
		7:(# ? #!):7
		8:(# ? #!):8
		9:(# ? #!):9
	} square_root

 	is_not_perfect_square ? error
	= 4 /
	square_root
} calc_side_len

// 0: input
// 1: input length
// 2: side length px
// 3: index
// 4: image with newlines
// 5: RGB pixels
// 6: groups of 4 base64 indeces (converted from input)

!!

read
0:move:1

// image
// 0:-----

// 4096
// 1:-----


1:calc_side_len:1
1:move:2
// 1:print_lossless:1

{
	{
		"A" %>= move:2 !
		"Z" %<= move:2 !
		2:&&
	} is_upper

	{
		"a" %>= move:2 !
		"z" %<= move:2 !
		2:&&
	} is_lower

	{
		"0" %>= move:2 !
		"9" %<= move:2 !
		2:&&
	} is_digit

	is_upper ? ("A" -) : (
		is_lower ? ("a" - 26 +) : (
			is_digit ? ("0" - 52 +) : (
				= "+" == ? (! 62) : (
					= "/" == ? (! 63) : error
				)
			)
		)
	)
} base64_index

// 3: index
// 9: base64 indeces (converted from input)
0:3
[#] #(
	3:=
	%]#[
	base64_index move:9
	!
	3:(= 1 +):3
)

// convert base64 indeces on stack 9 to groups of 4 on stack 6
[#] 4 / #(
	4:9 9:[]:6
)

6:print_stack_lossless:6


{

} red


{

} to_rgb



{
	1 +
	2:= 4 *
	% 0 ==
} is_end_of_line

"":4
0:3
[#] %? (
	#(
		3:=		// current index
		%]#[	// current char
		move:4 4:+:4
		// index
		// 0:---
		is_end_of_line ? ("\n":4 4:+:4)
		3:(= 1 +):3
	)
) : error

4:print




// 3: index
// 9: base64 char
// {
// 	move:9
// 	"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
// 	0:3
// 	[#] #(
// 		3:=
// 		%]#[
// 		9:= == ?
// 		3:(= 1 +):3
// 	)

// } base64_index
